{"ast":null,"code":"var _jsxFileName = \"/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/cmps/Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const [id, setId] = useState();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(`http://${window.location.hostname}:3030`);\n    socketRef.current.on('set id', userId => {\n      setId(userId);\n    });\n    socketRef.current.on('message', message => {\n      receivedMessage(message);\n    });\n  }, []);\n\n  function receivedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n  function sendMessage(e) {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      id\n    };\n    setMessage('');\n    socketRef.current.emit('send message', messageObject);\n  }\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message.body\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: handleChange,\n        placeholder: \"Say something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"ylGzZIinZKR+7iBcqUrb5IOCUYc=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/cmps/Messages.jsx"],"names":["useState","useEffect","useRef","io","Message","Messages","id","setId","messages","setMessages","message","setMessage","socketRef","current","connect","window","location","hostname","on","userId","receivedMessage","oldMsgs","sendMessage","e","preventDefault","messageObject","body","emit","handleChange","target","value","map","i"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBP,QAAQ,EAA9B;AACA,QAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMY,SAAS,GAAGV,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS,CAACC,OAAV,GAAoBV,EAAE,CAACW,OAAH,CAAY,UAASC,MAAM,CAACC,QAAP,CAAgBC,QAAS,OAA9C,CAApB;AACAL,IAAAA,SAAS,CAACC,OAAV,CAAkBK,EAAlB,CAAqB,QAArB,EAAgCC,MAAD,IAAY;AACzCZ,MAAAA,KAAK,CAACY,MAAD,CAAL;AACD,KAFD;AAIAP,IAAAA,SAAS,CAACC,OAAV,CAAkBK,EAAlB,CAAqB,SAArB,EAAiCR,OAAD,IAAa;AAC3CU,MAAAA,eAAe,CAACV,OAAD,CAAf;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;;AAWA,WAASU,eAAT,CAAyBV,OAAzB,EAAkC;AAChCD,IAAAA,WAAW,CAAEY,OAAD,IAAa,CAAE,GAAGA,OAAL,EAAcX,OAAd,CAAd,CAAX;AACD;;AAED,WAASY,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,IAAI,EAAEhB,OADc;AAEpBJ,MAAAA;AAFoB,KAAtB;AAIAK,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,IAAAA,SAAS,CAACC,OAAV,CAAkBc,IAAlB,CAAuB,cAAvB,EAAuCF,aAAvC;AACD;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACvBZ,IAAAA,UAAU,CAACY,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBACGtB,QAAQ,CAACuB,GAAT,CAAa,CAACrB,OAAD,EAAUsB,CAAV,kBACZ,QAAC,OAAD;AAAiB,QAAA,OAAO,EAAEtB,OAAO,CAACgB;AAAlC,SAAcM,CAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,QAAQ,EAAEV,WAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEZ,OADT;AAEE,QAAA,QAAQ,EAAEkB,YAFZ;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArDD;;GAAMvB,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nconst Messages = () => {\n  const [ id, setId ] = useState();\n  const [ messages, setMessages ] = useState([]);\n  const [ message, setMessage ] = useState('');\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect(`http://${window.location.hostname}:3030`);\n    socketRef.current.on('set id', (userId) => {\n      setId(userId);\n    });\n\n    socketRef.current.on('message', (message) => {\n      receivedMessage(message);\n    });\n  }, []);\n\n  function receivedMessage(message) {\n    setMessages((oldMsgs) => [ ...oldMsgs, message ]);\n  }\n\n  function sendMessage(e) {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      id\n    };\n    setMessage('');\n    socketRef.current.emit('send message', messageObject);\n  }\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, i) => (\n          <Message key={i} message={message.body} />\n        ))}\n      </div>\n      <form onSubmit={sendMessage}>\n        <textarea\n          value={message}\n          onChange={handleChange}\n          placeholder=\"Say something...\"\n        />\n        <button>Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}