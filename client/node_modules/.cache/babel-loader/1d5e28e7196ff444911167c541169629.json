{"ast":null,"code":"var _jsxFileName = \"/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/cmps/Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport { ChatContext } from '../context/ChatContext';\nimport { useContext } from 'react';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const {\n    messages,\n    id\n  } = useContext(ChatContext);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages flex col\",\n    children: messages.map((message, i) => {\n      if (message.id === id) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-end justify-right\",\n          children: [messages[i - 1].id !== message.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            message: message.body,\n            author: 'user'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this);\n      } else {\n        var _messages;\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-start\",\n          children: [((_messages = messages[i - 1]) === null || _messages === void 0 ? void 0 : _messages.id) !== message.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            message: message.body,\n            author: 'server'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"YVqmTdp4sYU/REHnthpAJ0t4OLE=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/cmps/Messages.jsx"],"names":["ChatContext","useContext","Message","Messages","messages","id","console","log","map","message","i","name","body"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAmBJ,UAAU,CAACD,WAAD,CAAnC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACGA,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,UAAID,OAAO,CAACJ,EAAR,KAAeA,EAAnB,EAAuB;AACrB,4BACE;AAAM,UAAA,SAAS,EAAC,yBAAhB;AAAA,qBACED,QAAQ,CAACM,CAAC,GAAC,CAAH,CAAR,CAAcL,EAAd,KAAqBI,OAAO,CAACJ,EAA7B,iBAAmC;AAAA,sBAAII,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADrC,eAEE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEF,OAAO,CAACG,IAA1B;AAAgC,YAAA,MAAM,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAA+CF,CAA/C;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAOO;AAAA;;AACL,4BACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,qBACK,cAAAN,QAAQ,CAACM,CAAC,GAAC,CAAH,CAAR,wDAAeL,EAAf,MAAsBI,OAAO,CAACJ,EAA9B,iBAAoC;AAAA,sBAAII,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADzC,eAEE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEF,OAAO,CAACG,IAA1B;AAAgC,YAAA,MAAM,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAmCF,CAAnC;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAhBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBD;;GAAMP,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { ChatContext } from '../context/ChatContext';\nimport { useContext } from 'react';\nimport Message from './Message';\nconst Messages = () => {\n  const { messages, id } = useContext(ChatContext);\n  console.log(messages);\n  return (\n    <div className=\"messages flex col\">\n      {messages.map((message, i) => {\n        if (message.id === id) {\n          return (\n            <span className=\"align-end justify-right\" key={i}>\n            { messages[i-1].id !== message.id && <p>{message.name}</p>}\n              <Message message={message.body} author={'user'} />\n            </span>\n          );\n        } else {\n          return (\n            <span className=\"align-start\" key={i}>\n               { messages[i-1]?.id !== message.id && <p>{message.name}</p>}\n              <Message message={message.body} author={'server'} />\n            </span>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}