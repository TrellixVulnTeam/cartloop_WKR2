{"ast":null,"code":"var _jsxFileName = \"/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/context/ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [id, setId] = useState();\n  const [messages, setMessages] = useState([{\n    body: 'America’s Plastics Makers Support Creating Circularity for Plastics',\n    id: 'server'\n  }]);\n  const [message, setMessage] = useState('');\n  const socketRef = useRef();\n  const messageData = {\n    body: message,\n    id\n  };\n  useEffect(() => {\n    // setId('user')\n    socketRef.current = io.connect(`http://${window.location.hostname}:3030`);\n    socketRef.current.on('id', userId => {\n      setId(userId);\n    });\n    socketRef.current.on(\"message from server\", message => {\n      receivedMessage(message);\n    });\n    socketRef.current.on('message', message => {\n      receivedMessage(message);\n    });\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    setMessage('');\n    socketRef.current.emit('send message', messageData); // setTimeout(() => {\n    //     socketRef.current.emit('debounced', null);\n    // }, 4000);\n  };\n\n  const sendByButton = () => {\n    setMessage('');\n    socketRef.current.emit('send message', messageData); // setTimeout(() => {\n    //     socketRef.current.emit('debounced', null);\n    // }, 4000);\n  };\n\n  useEffect(() => {\n    console.log('entered', messages);\n\n    if (socketRef.current.emit && messages[messages.length - 1].id !== 'server') {\n      console.log('entereddddd');\n\n      const throttle = _.throttle(() => socketRef.current.emit('throttled', null), 5000);\n\n      throttle();\n    }\n  }, [messages]);\n\n  const handleChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const receivedMessage = message => {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      receivedMessage,\n      handleChange,\n      sendMessage,\n      messages,\n      message,\n      id,\n      sendByButton\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatProvider, \"logsb/OvOAjQUnrsLkbokOne59A=\");\n\n_c = ChatProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"sources":["/Users/haleliamiad/Desktop/interviews/cartloop-chat/frontend/src/context/ChatContext.js"],"names":["createContext","useState","useEffect","useRef","io","_","ChatContext","ChatProvider","children","id","setId","messages","setMessages","body","message","setMessage","socketRef","messageData","current","connect","window","location","hostname","on","userId","receivedMessage","sendMessage","e","preventDefault","emit","sendByButton","console","log","length","throttle","handleChange","target","value","oldMsgs"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect, useRef } from 'react'\nimport io from 'socket.io-client';\nimport _ from 'lodash';\nexport const ChatContext = createContext()\n\nexport const ChatProvider = ({ children }) => {\n    const [id, setId] = useState();\n    const [messages, setMessages] = useState([{ body: 'America’s Plastics Makers Support Creating Circularity for Plastics', id: 'server' }]);\n    const [message, setMessage] = useState('');\n    const socketRef = useRef();\n\n    const messageData = {\n        body: message,\n        id\n    };\n\n\n    useEffect(() => {\n        // setId('user')\n        socketRef.current = io.connect(`http://${window.location.hostname}:3030`);\n        socketRef.current.on('id', (userId) => {\n            setId(userId);\n        });\n        socketRef.current.on(\"message from server\", message => {\n            receivedMessage(message);\n        })\n        socketRef.current.on('message', (message) => {\n            receivedMessage(message);\n        });\n    }, []);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        setMessage('');\n        socketRef.current.emit('send message', messageData);\n        // setTimeout(() => {\n        //     socketRef.current.emit('debounced', null);\n        // }, 4000);\n    }\n\n    const sendByButton = () => {\n        setMessage('')\n        socketRef.current.emit('send message', messageData);\n        // setTimeout(() => {\n        //     socketRef.current.emit('debounced', null);\n        // }, 4000);\n    }\n\n    useEffect(() => {\n        console.log('entered', messages);\n        if (socketRef.current.emit && messages[messages.length - 1].id !== 'server') {\n            console.log('entereddddd');\n            const throttle = _.throttle(() => socketRef.current.emit('throttled', null), 5000);\n            throttle()\n        }\n    }, [messages])\n\n    const handleChange = (e) => {\n        setMessage(e.target.value);\n    }\n\n\n    const receivedMessage = (message) => {\n        setMessages((oldMsgs) => [...oldMsgs, message]);\n    }\n\n    return (\n        <ChatContext.Provider\n            value={{\n                receivedMessage, handleChange, sendMessage, messages, message, id, sendByButton\n            }}>\n            {children}\n        </ChatContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}